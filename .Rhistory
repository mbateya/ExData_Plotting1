message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
makeCacheMatrix(matrix(1:6,2,3))
makeCacheMarix(matrix(1:6,2,3))
makeCacheMatrix(matrix(1:6,2,3))
solve(matrix(1:6,2,3))
myMatrix(1:8,2,2)
myMatrix <- (1:8,2,2)
myMatrix <- (1:8,2,2)
myMatrix <- matrix(1:8,2,2)
myMatrix
myMatrix < matrix(1:8,4,4)
myMatrix < matrix(1:16,4,4)
myMatrix < matrix(1:16, 4, 4)
myMatrix < matrix(1:8, 2, 4)
myMatrix < matrix(1:6, 2, 3)
?matrix
myMatrix <- matrix(1:16,4,4)
myMatrix
makeCacheMatrix(myMatrix)
CacheSolve(myMatrix)
CacheSolve(myMatrix)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m = NULL
set <- function(y) {
x <<- y
im <<- NULL
}
get <- function() x
setinverse <- function(solve) im <<- solve
getinverse <- function() im
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
makeCacheMatrix(myMatrix)
CacheSolve(myMatrix)
CacheSolve(myMatrix)
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
CacheSolve(myMatrix)
cacheSolve(myMatrix)
makeCacheMatrix(myMatrix)
cacheSolve(myMatrix)
traceback()
1
cacheSolve()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m = NULL
set <- function(y) {
x <<- y
im <<- NULL
}
get <- function() x
setinverse <- function(solve) im <<- solve
getinverse <- function() im
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
makeCacheMatrix(myMatrix)
cacheSolve(myMatrix)
?solve
solve(myMatrix)
makeCacheMatrix(myMatrix)
solve(myMatrix)
solve(matrix(1:16,4,4))
solve(matrix(1:16, 4, 4))
myMatrix
solve(myMatrix)
traceback()
traceback(1)
traceback(2)
debug()
?debug
debug(cacheSolve)
cacheSolve(myMatrix)
makeVector(5)
makeVector(c(1,2,3,4,5))
cachemean(c(1,2,3,4,5))
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(c(1,2,3,4,5))
myVect <- c(1,2,3,4,5)
mean(myVect)
makeVector <- makeVector(myVEct)
makeVector <- makeVector(myVect)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m = NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(myVect)
myVect
mean(myVect)
cachemean(myVect)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(myVect)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m = NULL
set <- function(y) {
x <<- y
im <<- NULL
}
get <- function() x
setinverse <- function(solve) im <<- solve
getinverse <- function() im
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
makeCacheMatrix(myMatrix)
cacheSolve(myMatrix,....)
a <- makeVector(c(1,2,3,4))
a$getmean()
cachemean(a)
cachemean(a)
a$set(c(10,20,30,40))
a$getmean()
cachemean(a)
cachemean(a)
a$get()
a <- makeCacheMatrix(1:16,4,4)
a <- makeCacheMatrix(matrix(1:16,4,4))
a$get()
cacheinverse(a)
a$get()
cacheSolve(a)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
im = NULL
set <- function(y) {
x <<- y
im <<- a <- makeVector(c(1,2,3,4))
NULL
}
get <- function() x
setinverse <- function(solve) im <<- solve
getinverse <- function() im
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
a$get()
cacheSolve(a)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
im = NULL
set <- function(y) {
x <<- y
im <<- a <- makeVector(c(1,2,3,4))
NULL
}
get <- function() x
setinverse <- function(solve) im <<- solve
getinverse <- function() im
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
im <- x$getinverse()
if(!is.null(im)) {
message("getting cached data")
return(im)
}
data <- x$get()
im <- solve(data, ...)
x$setinverse(im)
im
}
makeCacheMatrix(matrix(1:16,4,4))
myMatrix <- makeCacheMatrix(matrix(1:16,4,4))
a$get(myMatrix)
myMatrix$get()
cacheSolve(myMatrix)
cacheSolve(myMatrix)
url <- "http://www.globalinv.net/pdfs/funds/"
get(url)
setwd(./"Coursera")
dir()
setwd(./"Desktop/Coursera")
setwd("./Desktop/Coursera")
if (!file.exists("data")) {dir.create("data")}
dir()
if (!file.exists("expolatory1")) {dir.create("expolatory1")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./exploratory1/electricconsmption.zip", method = "curl")
dir()
setws(exploratory1)
setwd("./exploratory1")
getwd()
setwd("./expolatory1")
dir()
download.file(fileUrl, destfile = "electricconsmption.zip", method = "curl")
dir()
unzip(electricconsumption.zip)
dir()
electricconsumption <- unzip("./electricconsmption.zip")
?dir()
dir()
temp <- tempfile()
download.file("https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD",temp,method="curl")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp))
data <- read.table(unz(temp,"household_power_consumption.txt"))
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.string="?",quotes="")
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.string="?",quote="")
head(data)
data$Date <- as.date(data$Date)
data$Date <- as.Date(data$Date)
head(data)
?strptime()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.string="?",quote="")
head(data)
?read.table()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
head(data,20)
data2 <- data[data$Date == "01/02/2007"|"02/02/2007",]
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
head(data)
head(data2)
dta
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
head(data2)
tail(data2)
data2$Date <- strptime(data2$Date,"%d/%m/%y")
head(data2)
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
head(data2)
strptime(data2$Date,"%d/%m/%y")
strptime(data2$Date,"%d/%m/%yy")
strptime(data2$Date,"%d/%m/%Y")
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
head(data2)
head(data2)
hist(data2$Global_active_power)
?hist()
hist(data2$Global_active_power,col="red")
hist(data2$Global_active_power,col="red",xlab="GLobal Active Power (kilowatts)")
hist(data2$Global_active_power,col="red",xlab="Global Active Power (kilowatts)")
hist(data2$Global_active_power,col="red",mainlab="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
?Devices
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
getwd()
dir()
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dir()
dev.off()
dir()
temp <- tempfile()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
temp <- tempfile()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
png("plot1.png",width=480,height=480)
?submit()
?submit
?source
source("plot1.R")
source("plot1.r")
unlink(temp)
temp <- tempfile()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
temp <- tempfile()
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
unlink(temp)
dev.off()
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",breaks="Sturges",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "01/02/2007"|data$Date == "02/02/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
head(data2)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp,"household_power_consumption.txt"),header=TRUE,sep=";",na.strings="?",quote="")
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
data2$Date <- strptime(data2$Date,"%d/%m/%Y")
png("plot1.png",width=480,height=480)
hist(data2$Global_active_power,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.off()
unlink(temp)
get(wd)
getwd()
setwd("~/Desktop/Coursera/ExData_Plotting1")
head(data2)
data2$Date <- as.Date(data2$Date)
head(data2)
class(data2$Date)
data2$Date <- weekdays(data2$Date)
head(data2)
tail(data2)
date <- strptime("11-28-1976", "%m-%d-%Y")
Weekdays(date)
weekdays(date)
?plot
plot(data2$Time,data2$Global_active_power)
getwd()
plot(data2$Time,data2$Global_active_power)
head(data2)
plot(data2$Time,data2$Global_active_power)
getwd()
?plot
quartz()
plot(data2$Time,data2$Global_active_power)
DateTime <- paste(data2$Date)
head(data2)
data.frame(data2,DateTime)
data3 <- data.frame(data2,DateTime)
head(data3)
DateTime
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
DateTime <- paste(data2$Date)
data3 <- data.frame(data2,DateTime)
head(data3)
DateTime <- paste(data2$Date,data2$Time)
data3 <- data.frame(data2,DateTime)
head(data3)
data3$Date <- strptime(data2$DateTime,"%d/%m/%Y %H:%M:%OS")
data3$Date <- strptime(data2$DateTime,"%d/%m/%Y %H:%M:%S")
data3$DateTime <- strptime(data2$DateTime,"%d/%m/%Y %H:%M:%S")
data3$DateTime <- strptime(data3$DateTime,"%d/%m/%Y %H:%M:%S")
head(data3)
data3$DateTime <- strptime(data3$DateTime,"%d/%m/%Y %H:%M:%S")
plot(data3$DateTime,data3$Global_active_power)
xplot(data3$DateTime,data3$Global_active_power)
plot(data3$DateTime,data3$Global_active_power)
head(data3)
data3$DateTime <- strptime(data3$DateTime,"%d/%m/%Y %H:%M:%S")
head(data3)
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
data3$DateTime <- strptime(data3$DateTime,"%d/%m/%Y %H:%M:%S")
head(data3)
data2 <- data[data$Date == "1/2/2007"|data$Date == "2/2/2007",]
DateTime <- paste(data2$Date,data2$Time)
data3 <- data.frame(data2,DateTime)
data3$DateTime <- strptime(data3$DateTime,"%d/%m/%Y %H:%M:%S")
head(data3)
